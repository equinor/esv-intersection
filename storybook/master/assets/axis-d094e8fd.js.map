{"version":3,"file":"axis-d094e8fd.js","sources":["../../../../src/layers/GridLayer.ts","../../../../node_modules/d3-axis/src/identity.js","../../../../node_modules/d3-axis/src/axis.js","../../../../src/components/axis.ts"],"sourcesContent":["import { CanvasLayer } from './base/CanvasLayer';\nimport { OnUpdateEvent, OnRescaleEvent } from '../interfaces';\nimport { ScaleLinear } from 'd3-scale';\nimport { LayerOptions } from './base/Layer';\n\n// constants\nconst MINORCOLOR = 'lightgray';\nconst MAJORCOLOR = 'gray';\nconst MINORWIDTH = 0.25;\nconst MAJORWIDTH = 0.75;\n\nconst defaultOptions = {\n  minorColor: MINORCOLOR,\n  majorColor: MAJORCOLOR,\n  minorWidth: MINORWIDTH,\n  majorWidth: MAJORWIDTH,\n};\n\nexport interface GridLayerOptions<T> extends LayerOptions<T> {\n  majorWidth?: number;\n  majorColor?: string;\n  minorWidth?: number;\n  minorColor?: string;\n}\n\nexport interface OnGridLayerUpdateEvent<T> extends OnUpdateEvent<T> {\n  xScale?: ScaleLinear<number, number, never>;\n  yScale?: ScaleLinear<number, number, never>;\n}\n\nexport class GridLayer<T> extends CanvasLayer<T> {\n  private _offsetX = 0;\n  private _offsetY = 0;\n\n  constructor(id?: string, options?: GridLayerOptions<T>) {\n    super(id, options);\n    this.options = {\n      ...this.options,\n      ...(options || defaultOptions),\n    };\n    this.render = this.render.bind(this);\n  }\n\n  override onUpdate(event: OnGridLayerUpdateEvent<T>): void {\n    super.onUpdate(event);\n    this.render(event);\n  }\n\n  override onRescale(event: OnRescaleEvent): void {\n    super.onRescale(event);\n    this.render(event);\n  }\n\n  render(event: OnRescaleEvent | OnGridLayerUpdateEvent<T>): void {\n    const { ctx } = this;\n    const { minorWidth, minorColor, majorWidth, majorColor } = this.options as GridLayerOptions<T>;\n\n    if (!ctx) {\n      return;\n    }\n\n    this.clearCanvas();\n\n    if (!(event.xScale || event.yScale)) {\n      return;\n    }\n\n    const xScale = event.xScale!.copy();\n    const yScale = event.yScale!.copy();\n\n    const xDomain = xScale.domain() as [number, number];\n    const yDomain = yScale.domain() as [number, number];\n\n    const offsetX = this.offsetX;\n    const offsetY = this.offsetY;\n\n    xScale.domain([xDomain[0] - offsetX, xDomain[1] - offsetX]);\n    yScale.domain([yDomain[0] - offsetY, yDomain[1] - offsetY]);\n\n    const [rx1, rx2] = xScale.range() as [number, number];\n    const [ry1, ry2] = yScale.range() as [number, number];\n\n    ctx.lineWidth = minorWidth || MINORWIDTH;\n    ctx.strokeStyle = minorColor || MINORCOLOR;\n\n    // minor grid lines\n    const xminticks = this.mapMinorTicks(xScale.ticks());\n    const yminticks = this.mapMinorTicks(yScale.ticks());\n    this.renderTicksX(xScale, xminticks, ry1, ry2);\n    this.renderTicksY(yScale, yminticks, rx1, rx2);\n\n    ctx.lineWidth = majorWidth || MAJORWIDTH;\n    ctx.strokeStyle = majorColor || MAJORCOLOR;\n\n    // major grid lines\n    this.renderTicksX(xScale, xScale.ticks(), ry1, ry2);\n    this.renderTicksY(yScale, yScale.ticks(), rx1, rx2);\n    ctx.restore();\n  }\n\n  private renderTicksX(xscale: ScaleLinear<number, number, never>, xticks: number[], ry1: number, ry2: number): void {\n    xticks.forEach((tx: number) => {\n      const x = xscale(tx);\n      if (this.ctx != null) {\n        this.ctx.beginPath();\n        this.ctx.moveTo(x, ry1);\n        this.ctx.lineTo(x, ry2);\n        this.ctx.stroke();\n      }\n    });\n  }\n\n  private renderTicksY(yscale: ScaleLinear<number, number, never>, yticks: number[], rx1: number, rx2: number): void {\n    yticks.forEach((ty: number) => {\n      const y = yscale(ty);\n      if (this.ctx != null) {\n        this.ctx.beginPath();\n        this.ctx.moveTo(rx1, y);\n        this.ctx.lineTo(rx2, y);\n        this.ctx.stroke();\n      }\n    });\n  }\n\n  private mapMinorTicks(ticks: number[]): number[] {\n    let xminticks: number[] = [];\n    if (ticks.length >= 2) {\n      xminticks = ticks.map((v: number) => v + (ticks[1]! - ticks[0]!) / 2);\n      xminticks.pop();\n    }\n    return xminticks;\n  }\n\n  get offsetX(): number {\n    return this._offsetX;\n  }\n\n  set offsetX(offset: number) {\n    this._offsetX = offset;\n  }\n\n  get offsetY(): number {\n    return this._offsetY;\n  }\n\n  set offsetY(offset: number) {\n    this._offsetY = offset;\n  }\n}\n","export default function(x) {\n  return x;\n}\n","import identity from \"./identity.js\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + x + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + y + \")\";\n}\n\nfunction number(scale) {\n  return d => +scale(d);\n}\n\nfunction center(scale, offset) {\n  offset = Math.max(0, scale.bandwidth() - offset * 2) / 2;\n  if (scale.round()) offset = Math.round(offset);\n  return d => +scale(d) + offset;\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      offset = typeof window !== \"undefined\" && window.devicePixelRatio > 1 ? 0 : 0.5,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + offset,\n        range1 = +range[range.length - 1] + offset,\n        position = (scale.bandwidth ? center : number)(scale.copy(), offset),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"currentColor\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"currentColor\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"currentColor\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d + offset) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform((p && isFinite(p = p(d)) ? p : position(d)) + offset); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient === right\n            ? (tickSizeOuter ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H\" + offset + \"V\" + range1 + \"H\" + k * tickSizeOuter : \"M\" + offset + \",\" + range0 + \"V\" + range1)\n            : (tickSizeOuter ? \"M\" + range0 + \",\" + k * tickSizeOuter + \"V\" + offset + \"H\" + range1 + \"V\" + k * tickSizeOuter : \"M\" + range0 + \",\" + offset + \"H\" + range1));\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d) + offset); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = Array.from(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : Array.from(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : Array.from(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  axis.offset = function(_) {\n    return arguments.length ? (offset = +_, axis) : offset;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","import { axisRight, axisBottom } from 'd3-axis';\nimport { Selection } from 'd3-selection';\nimport { ScaleLinear, scaleLinear } from 'd3-scale';\nimport { OnResizeEvent, OnRescaleEvent } from '../interfaces';\n\nexport type Options = {\n  offsetX: number;\n  offsetY: number;\n  visible: boolean;\n};\n\nexport class Axis {\n  private mainGroup: Selection<SVGSVGElement, unknown, null, undefined>;\n  private _scaleX: ScaleLinear<number, number>;\n  private _scaleY: ScaleLinear<number, number>;\n  private _showLabels = true;\n  private _labelXDesc: string;\n  private _labelYDesc: string;\n  private _unitOfMeasure: string;\n  private _offsetX = 0;\n  private _offsetY = 0;\n  private _flipX = false;\n  private _flipY = false;\n  private visible = true;\n\n  constructor(mainGroup: Axis['mainGroup'], showLabels = true, labelXDesc: string, labelYDesc: string, unitOfMeasure: string, options?: Options) {\n    this.mainGroup = mainGroup;\n    this._showLabels = showLabels;\n    this._labelXDesc = labelXDesc;\n    this._labelYDesc = labelYDesc;\n    this._unitOfMeasure = unitOfMeasure;\n    if (options && options.offsetX) {\n      this._offsetX = options.offsetX;\n    }\n    if (options && options.offsetX) {\n      this._offsetY = options.offsetY;\n    }\n    if (options && options.visible) {\n      this.visible = options.visible;\n    }\n    this.mainGroup.style('pointer-events', 'none');\n\n    this._scaleX = scaleLinear().domain([0, 1]).range([0, 1]);\n    this._scaleY = scaleLinear().domain([0, 1]).range([0, 1]);\n  }\n\n  private renderLabelx(): Selection<SVGTextElement, unknown, null, undefined> {\n    const { _labelXDesc: labelXDesc, _unitOfMeasure: unitOfMeasure, _showLabels, _scaleX: scaleX } = this;\n    const [, width] = scaleX.range();\n    const gx = this.renderGx();\n\n    let labelx: Selection<SVGTextElement, unknown, null, undefined> = gx.select('text.axis-labelx');\n    if (_showLabels) {\n      if (labelx.empty()) {\n        labelx = gx\n          .append('text')\n          .attr('class', 'axis-labelx')\n          .attr('fill', 'rgba(0,0,0,0.3)')\n          .style('text-anchor', 'middle')\n          .style('font-weight', '800')\n          .style('font-size', '10px')\n          .text(`${labelXDesc} (${unitOfMeasure})`);\n      }\n    } else {\n      labelx.remove();\n    }\n    labelx.attr('transform', `translate(${width! / 2},-4)`);\n    return labelx;\n  }\n\n  private renderLabely(): Selection<SVGTextElement, unknown, null, undefined> {\n    const { _labelYDesc: labelYDesc, _unitOfMeasure: unitOfMeasure, _showLabels, _scaleY } = this;\n    const [, height] = _scaleY.range();\n    const gy = this.renderGy();\n\n    let labely: Selection<SVGTextElement, unknown, null, undefined> = gy.select('text.axis-labely');\n    if (_showLabels) {\n      if (labely.empty()) {\n        labely = gy\n          .append('text')\n          .attr('class', 'axis-labely')\n          .attr('fill', 'rgba(0,0,0,0.3)')\n          .style('text-anchor', 'middle')\n          .style('font-weight', '800')\n          .style('font-size', '10px')\n          .text(`${labelYDesc} (${unitOfMeasure})`);\n      }\n      labely.attr('transform', `translate(-10,${height! / 2})rotate(90)`);\n    } else {\n      labely.remove();\n    }\n    return labely;\n  }\n\n  private renderGy(): Selection<SVGGElement, unknown, null, undefined> {\n    const { _scaleX, _scaleY } = this;\n    const yAxis = axisRight(_scaleY) as (selection: Selection<SVGGElement, unknown, null, undefined>, ...args: unknown[]) => void;\n    const [, width] = _scaleX.range();\n    const gy = this.createOrGet('y-axis');\n    gy.call(yAxis);\n    gy.attr('transform', `translate(${width},0)`);\n\n    return gy;\n  }\n\n  private renderGx(): Selection<SVGGElement, unknown, null, undefined> {\n    const { _scaleX, _scaleY } = this;\n    const xAxis = axisBottom(_scaleX) as (selection: Selection<SVGGElement, unknown, null, undefined>, ...args: unknown[]) => void;\n    const [, height] = _scaleY.range();\n\n    const gx = this.createOrGet('x-axis');\n    gx.attr('transform', `translate(0 ${height})`);\n    gx.call(xAxis);\n    return gx;\n  }\n\n  private createOrGet = (name: string): Selection<SVGGElement, unknown, null, undefined> => {\n    const { mainGroup } = this;\n    let res: Selection<SVGGElement, unknown, null, undefined> = mainGroup.select(`g.${name}`);\n    if (res.empty()) {\n      res = mainGroup.append('g').attr('class', name);\n    }\n    return res;\n  };\n\n  render(): void {\n    this.renderLabelx();\n    this.renderLabely();\n  }\n\n  onResize(event: OnResizeEvent): void {\n    this.mainGroup.attr('height', `${event.height}px`).attr('width', `${event.width}px`);\n  }\n\n  onRescale(event: OnRescaleEvent): void {\n    const { _scaleX, _scaleY, offsetX, offsetY } = this;\n    const { xScale, yScale } = event;\n    const xBounds = xScale.domain() as [number, number];\n    const yBounds = yScale.domain() as [number, number];\n\n    const xRange = xScale.range();\n    const yRange = yScale.range();\n\n    _scaleX.domain([xBounds[0] - offsetX, xBounds[1] - offsetX]).range(xRange);\n    _scaleY.domain([yBounds[0] - offsetY, yBounds[1] - offsetY]).range(yRange);\n    this.flipX(this._flipX);\n    this.flipY(this._flipY);\n\n    if (this.visible) {\n      this.render();\n    }\n  }\n\n  show(): Axis {\n    this.visible = true;\n    this.mainGroup.attr('visibility', 'visible');\n    this.render();\n    return this;\n  }\n\n  hide(): Axis {\n    this.visible = false;\n    this.mainGroup.attr('visibility', 'hidden');\n    return this;\n  }\n\n  flipX(flipX: boolean): Axis {\n    this._flipX = flipX;\n    const domain = this._scaleX.domain() as [number, number];\n    const flip = flipX ? -1 : 1;\n    this._scaleX.domain([flip * domain[0], flip * domain[1]]);\n    return this;\n  }\n\n  flipY(flipY: boolean): Axis {\n    this._flipY = flipY;\n    const domain = this._scaleY.domain() as [number, number];\n    const flip = flipY ? -1 : 1;\n    this._scaleY.domain([flip * domain[0], flip * domain[1]]);\n    return this;\n  }\n\n  showLabels(): Axis {\n    this._showLabels = true;\n    this.render();\n    return this;\n  }\n\n  hideLabels(): Axis {\n    this._showLabels = false;\n    this.render();\n    return this;\n  }\n\n  setLabelX(label: string): Axis {\n    this._labelXDesc = label;\n    return this;\n  }\n\n  setLabelY(label: string): Axis {\n    this._labelYDesc = label;\n    return this;\n  }\n\n  setUnitOfMeasure(uom: string): Axis {\n    this._unitOfMeasure = uom;\n    return this;\n  }\n\n  setLabels(labelX: string, labelY: string, unitOfMeasure: string): Axis {\n    this._labelXDesc = labelX;\n    this._labelYDesc = labelY;\n    this._unitOfMeasure = unitOfMeasure;\n    return this;\n  }\n\n  get offsetX(): number {\n    return this._offsetX;\n  }\n\n  set offsetX(offset: number) {\n    this._offsetX = offset;\n  }\n\n  get offsetY(): number {\n    return this._offsetY;\n  }\n\n  set offsetY(offset: number) {\n    this._offsetY = offset;\n  }\n\n  get scaleX(): ScaleLinear<number, number> {\n    return this._scaleX.copy();\n  }\n\n  get scaleY(): ScaleLinear<number, number> {\n    return this._scaleY.copy();\n  }\n}\n"],"names":["MINORCOLOR","MAJORCOLOR","MINORWIDTH","MAJORWIDTH","defaultOptions","GridLayer","CanvasLayer","id","options","event","ctx","minorWidth","minorColor","majorWidth","majorColor","xScale","yScale","xDomain","yDomain","offsetX","offsetY","rx1","rx2","ry1","ry2","xminticks","yminticks","xscale","xticks","tx","x","yscale","yticks","ty","y","ticks","v","offset","identity","top","right","bottom","left","epsilon","translateX","translateY","number","scale","d","center","entering","axis","orient","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","k","transform","context","values","format","spacing","range","range0","range1","position","selection","path","tick","tickExit","tickEnter","line","text","p","_","axisRight","axisBottom","Axis","mainGroup","showLabels","labelXDesc","labelYDesc","unitOfMeasure","name","res","scaleLinear","_showLabels","scaleX","width","gx","labelx","_scaleY","height","gy","labely","_scaleX","yAxis","xAxis","xBounds","yBounds","xRange","yRange","flipX","domain","flip","flipY","label","uom","labelX","labelY"],"mappings":"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","x_google_ignoreList":[1,2]}