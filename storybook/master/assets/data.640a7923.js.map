{"version":3,"file":"data.640a7923.js","sources":["../../../../.storybook/src/data.ts"],"sourcesContent":["import {\n  poslog,\n  cementData,\n  holeSizeData,\n  casingData,\n  surfaces,\n  completion,\n  stratColumns,\n  picks,\n  seismic,\n  cementSqueezes,\n} from './esv-intersection-data';\n\nexport const getWellborePath = (): Promise<any> => {\n  const coords = poslog.map((c: any) => [c.easting, c.northing, c.tvd]);\n  return Promise.resolve(coords);\n};\n\nexport const getPositionLog = (): Promise<any> => {\n  return Promise.resolve(poslog);\n};\n\nexport const getCompletion = (): Promise<any[]> => {\n  return Promise.resolve(completion);\n};\n\nexport const getSurfaces = (): Promise<any[]> => {\n  return Promise.resolve(surfaces);\n};\n\nexport const getStratColumns = (): Promise<any[]> => {\n  return Promise.resolve(stratColumns);\n};\n\nexport const getSeismic = (): Promise<any> => {\n  return Promise.resolve(seismic);\n};\n\nexport const getHolesize = (): Promise<any[]> => {\n  return Promise.resolve(holeSizeData);\n};\n\nexport const getCasings = (): Promise<any[]> => {\n  return Promise.resolve(casingData);\n};\n\nexport const getCement = (): Promise<any[]> => {\n  return Promise.resolve(cementData);\n};\n\nexport const getPicks = (): Promise<any[]> => {\n  return Promise.resolve(picks);\n};\n\nexport const getCementSqueezes = (): Promise<any[]> => {\n  return Promise.resolve(cementSqueezes)\n}\n\n// Nothing for mock\nexport const fetchData = async (fileName: string) => { };\n"],"names":["getWellborePath","coords","poslog","c","getPositionLog","getCompletion","completion","getSurfaces","surfaces","getStratColumns","stratColumns","getSeismic","seismic","getHolesize","holeSizeData","getCasings","casingData","getCement","cementData","getPicks","picks","getCementSqueezes","cementSqueezes"],"mappings":"kkqkOAaaA,EAAkB,IAAoB,CACjD,MAAMC,EAASC,EAAO,IAAKC,GAAW,CAACA,EAAE,QAASA,EAAE,SAAUA,EAAE,GAAG,CAAC,EAC7D,OAAA,QAAQ,QAAQF,CAAM,CAC/B,EAEaG,EAAiB,IACrB,QAAQ,QAAQF,CAAM,EAGlBG,EAAgB,IACpB,QAAQ,QAAQC,CAAU,EAGtBC,EAAc,IAClB,QAAQ,QAAQC,CAAQ,EAGpBC,EAAkB,IACtB,QAAQ,QAAQC,CAAY,EAGxBC,EAAa,IACjB,QAAQ,QAAQC,CAAO,EAGnBC,EAAc,IAClB,QAAQ,QAAQC,CAAY,EAGxBC,EAAa,IACjB,QAAQ,QAAQC,CAAU,EAGtBC,EAAY,IAChB,QAAQ,QAAQC,CAAU,EAGtBC,EAAW,IACf,QAAQ,QAAQC,CAAK,EAGjBC,EAAoB,IACxB,QAAQ,QAAQC,CAAc"}