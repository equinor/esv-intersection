{"version":3,"file":"axis.stories.cc8d2a1b.js","sources":["../../../.storybook/src/features/axis.stories.ts"],"sourcesContent":["import { Axis } from '../../../src/components';\nimport { select, Selection } from 'd3-selection';\nimport { ZoomPanHandler, OnRescaleEvent, Controller } from '../../../src';\nimport { createFPSLabel, createRootContainer, createLayerContainer, createHelpText } from '../utils';\nimport { HORIZONTAL_AXIS_MARGIN, VERTICAL_AXIS_MARGIN } from '../../../src/constants';\nconst width = 500;\nconst height = 300;\nexport const AxisUsingLowLevelInterface = () => {\n  const root = createRootContainer(width);\n  const container = createLayerContainer(width, height);\n  const mainGroup = ((select(container).append('svg').attr('height', `${height}px`).attr('width', `${width}px`).style('background-color', '#eee') as unknown) as Selection<SVGElement, unknown, null, undefined>);\n  const showLabels = true;\n  const xLabel = 'x';\n  const yLabel = 'y';\n  const unitOfMeasure = 'm';\n  const axis = new Axis(mainGroup, showLabels, xLabel, yLabel, unitOfMeasure);\n  const zoomHandler = new ZoomPanHandler(container, (event: OnRescaleEvent) => {\n    axis.onRescale(event);\n  });\n\n  // overrides the default bounds of [0, 1]\n  zoomHandler.setBounds([0, 1000], [0, 1000]);\n  // adjusts the dimensions of the axis\n  zoomHandler.adjustToSize(width - HORIZONTAL_AXIS_MARGIN, height - VERTICAL_AXIS_MARGIN);\n  root.appendChild(createHelpText('Low level interface for creating and displaying an axis, there is also a zoom and pan handler connected'));\n  root.appendChild(container);\n  root.appendChild(createFPSLabel());\n  return root;\n};\nexport const AxisUsingHighLevelInterface = () => {\n  const root = createRootContainer(width);\n  const container = createLayerContainer(width, height);\n\n  // axisOptions passed into the controller when created is currently the only way to create the axis via the controller\n  const axisOptions = {\n    xLabel: 'x',\n    yLabel: 'y',\n    unitOfMeasure: 'm'\n  };\n  const controller = new Controller({\n    container,\n    axisOptions\n  });\n\n  // overrides the default bounds of [0, 1]\n  controller.setBounds([0, 1000], [0, 1000]);\n  // displays the axis (and any other connected layers)\n  controller.adjustToSize(width, height);\n  root.appendChild(createHelpText('High level interface for creating and displaying an axis, there is also a zoom and pan handler connected'));\n  root.appendChild(container);\n  root.appendChild(createFPSLabel());\n  return root;\n};\nexport default {\n  title: 'ESV Intersection/Features/Axis',\n  component: AxisUsingLowLevelInterface\n};\nAxisUsingLowLevelInterface.parameters = {\n  ...AxisUsingLowLevelInterface.parameters,\n  storySource: {\n    source: \"() => {\\n  const root = createRootContainer(width);\\n  const container = createLayerContainer(width, height);\\n  const mainGroup = ((select(container).append('svg').attr('height', `${height}px`).attr('width', `${width}px`).style('background-color', '#eee') as unknown) as Selection<SVGElement, unknown, null, undefined>);\\n  const showLabels = true;\\n  const xLabel = 'x';\\n  const yLabel = 'y';\\n  const unitOfMeasure = 'm';\\n  const axis = new Axis(mainGroup, showLabels, xLabel, yLabel, unitOfMeasure);\\n  const zoomHandler = new ZoomPanHandler(container, (event: OnRescaleEvent) => {\\n    axis.onRescale(event);\\n  });\\n\\n  // overrides the default bounds of [0, 1]\\n  zoomHandler.setBounds([0, 1000], [0, 1000]);\\n  // adjusts the dimensions of the axis\\n  zoomHandler.adjustToSize(width - HORIZONTAL_AXIS_MARGIN, height - VERTICAL_AXIS_MARGIN);\\n  root.appendChild(createHelpText('Low level interface for creating and displaying an axis, there is also a zoom and pan handler connected'));\\n  root.appendChild(container);\\n  root.appendChild(createFPSLabel());\\n  return root;\\n}\",\n    ...AxisUsingLowLevelInterface.parameters?.storySource\n  }\n};\nAxisUsingHighLevelInterface.parameters = {\n  ...AxisUsingHighLevelInterface.parameters,\n  storySource: {\n    source: \"() => {\\n  const root = createRootContainer(width);\\n  const container = createLayerContainer(width, height);\\n\\n  // axisOptions passed into the controller when created is currently the only way to create the axis via the controller\\n  const axisOptions = {\\n    xLabel: 'x',\\n    yLabel: 'y',\\n    unitOfMeasure: 'm'\\n  };\\n  const controller = new Controller({\\n    container,\\n    axisOptions\\n  });\\n\\n  // overrides the default bounds of [0, 1]\\n  controller.setBounds([0, 1000], [0, 1000]);\\n  // displays the axis (and any other connected layers)\\n  controller.adjustToSize(width, height);\\n  root.appendChild(createHelpText('High level interface for creating and displaying an axis, there is also a zoom and pan handler connected'));\\n  root.appendChild(container);\\n  root.appendChild(createFPSLabel());\\n  return root;\\n}\",\n    ...AxisUsingHighLevelInterface.parameters?.storySource\n  }\n};"],"names":["width","height","AxisUsingLowLevelInterface","root","createRootContainer","container","createLayerContainer","mainGroup","select","showLabels","xLabel","yLabel","unitOfMeasure","axis","Axis","zoomHandler","ZoomPanHandler","event","HORIZONTAL_AXIS_MARGIN","VERTICAL_AXIS_MARGIN","createHelpText","createFPSLabel","AxisUsingHighLevelInterface","axisOptions","controller","Controller","axis_stories","_a"],"mappings":"gOAKA,MAAMA,EAAQ,IACRC,EAAS,IACFC,EAA6B,IAAM,CACxC,MAAAC,EAAOC,EAAoBJ,CAAK,EAChCK,EAAYC,EAAqBN,EAAOC,CAAM,EAC9CM,EAAcC,EAAOH,CAAS,EAAE,OAAO,KAAK,EAAE,KAAK,SAAU,GAAGJ,KAAU,EAAE,KAAK,QAAS,GAAGD,KAAS,EAAE,MAAM,mBAAoB,MAAM,EACxIS,EAAa,GACbC,EAAS,IACTC,EAAS,IACTC,EAAgB,IAChBC,EAAO,IAAIC,EAAKP,EAAWE,EAAYC,EAAQC,EAAQC,CAAa,EACpEG,EAAc,IAAIC,EAAeX,EAAYY,GAA0B,CAC3EJ,EAAK,UAAUI,CAAK,CAAA,CACrB,EAGW,OAAAF,EAAA,UAAU,CAAC,EAAG,GAAI,EAAG,CAAC,EAAG,GAAI,CAAC,EAE1CA,EAAY,aAAaf,EAAQkB,EAAwBjB,EAASkB,CAAoB,EACjFhB,EAAA,YAAYiB,EAAe,yGAAyG,CAAC,EAC1IjB,EAAK,YAAYE,CAAS,EACrBF,EAAA,YAAYkB,GAAgB,EAC1BlB,CACT,EACamB,EAA8B,IAAM,CACzC,MAAAnB,EAAOC,EAAoBJ,CAAK,EAChCK,EAAYC,EAAqBN,EAAOC,CAAM,EAG9CsB,EAAc,CAClB,OAAQ,IACR,OAAQ,IACR,cAAe,GAAA,EAEXC,EAAa,IAAIC,EAAW,CAChC,UAAApB,EACA,YAAAkB,CAAA,CACD,EAGU,OAAAC,EAAA,UAAU,CAAC,EAAG,GAAI,EAAG,CAAC,EAAG,GAAI,CAAC,EAE9BA,EAAA,aAAaxB,EAAOC,CAAM,EAChCE,EAAA,YAAYiB,EAAe,0GAA0G,CAAC,EAC3IjB,EAAK,YAAYE,CAAS,EACrBF,EAAA,YAAYkB,GAAgB,EAC1BlB,CACT,EACeuB,EAAA,CACb,MAAO,iCACP,UAAWxB,CACb,QACAA,EAA2B,WAAa,CACtC,GAAGA,EAA2B,WAC9B,YAAa,CACX,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACR,IAAGyB,EAAAzB,EAA2B,aAA3B,YAAAyB,EAAuC,WAC5C,CACF,QACAL,EAA4B,WAAa,CACvC,GAAGA,EAA4B,WAC/B,YAAa,CACX,OAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACR,IAAGK,EAAAL,EAA4B,aAA5B,YAAAK,EAAwC,WAC7C,CACF"}